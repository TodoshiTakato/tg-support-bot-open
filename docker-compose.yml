services:
    app:
        build:
            args:
                user: ${USER:-1000}
                uid: ${UID:-1000}
            context: ./
            dockerfile: docker/php-fpm/Dockerfile
        image: tg-support-bot-php-fpm
        environment:
            - TZ=Asia/Tashkent
        container_name: tg-support-bot-php-fpm
        restart: unless-stopped
        working_dir: /home/tg-support-bot/www
        volumes:
            - ./:/home/tg-support-bot/www
            - ./docker/php-fpm/php.ini:/usr/local/etc/php/php.ini
            - ./docker/php-fpm/www-bot.conf:/usr/local/etc/php-fpm.d/www2.conf
        networks:
            - tg-support-bot-network

    db:
        image: mariadb:10.5.15
        container_name: tg-support-bot-mysql
        restart: unless-stopped
        ports:
            - ${DB_PORT}:3306
        environment:
            TZ: Asia/Tashkent
            MYSQL_DATABASE: ${DB_DATABASE}
            MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
            MYSQL_PASSWORD: ${DB_PASSWORD}
            MYSQL_USER: ${DB_USERNAME}
            SERVICE_TAGS: dev
            SERVICE_NAME: mysql
        volumes:
            - tg-support-bot-mysql-data:/var/lib/mysql
        networks:
            - tg-support-bot-network

    webserver:
        image: nginx:alpine
        container_name: tg-support-bot-nginx
        environment:
            -   TZ=Asia/Tashkent
        restart: unless-stopped
        ports:
            - ${WEBSERVER_PORT:-80}:80
        volumes:
            - ./:/home/tg-support-bot/www
            - ./docker/nginx:/etc/nginx/conf.d
        networks:
            - tg-support-bot-network

    redis:
        image: redis
        container_name: tg-support-bot-redis
        environment:
            - TZ=Asia/Tashkent
        restart: unless-stopped
        ports:
            - ${REDIS_PORT}:${REDIS_PORT}
        volumes:
            - tg-support-bot-redis-data:/var/lib/redis/
        networks:
            - tg-support-bot-network

    rabbitmq:
#        image: rabbitmq:3.8.18-management
        image: rabbitmq:3.13.0-management
        container_name: tg-support-bot-rabbitmq
        environment:
            - TZ=Asia/Tashkent
            - RABBITMQ_DEFAULT_USER=${AMQP_USER}
            - RABBITMQ_DEFAULT_PASS=${AMQP_PASSWORD}
#            - RABBITMQ_DEFAULT_VHOST=${AMQP_VHOST}
#        deploy:
#            resources:
#                limits:
#                    cpus: '0.50'
#                    memory: 50M
#                reservations:
#                    cpus: '0.25'
#                    memory: 20M
        ports:
            - ${AMQP_PORT}:${AMQP_PORT}
            - ${RABBITMQ_MANAGEMENT_PORT}:${RABBITMQ_MANAGEMENT_PORT}
        volumes:
            - tg-support-bot-rabbitmq-config:/etc/rabbitmq/rabbitmq.config
            - tg-support-bot-rabbitmq-data:/var/lib/rabbitmq/
            - tg-support-bot-rabbitmq-log:/var/log/rabbitmq/
            - tg-support-bot-rabbitmq-database:/var/lib/rabbitmq/mnesia/rabbit@my-rabbit
        networks:
            - tg-support-bot-network


volumes:
    tg-support-bot-mysql-data:
    tg-support-bot-redis-data:
    tg-support-bot-rabbitmq-config:
    tg-support-bot-rabbitmq-data:
    tg-support-bot-rabbitmq-log:
    tg-support-bot-rabbitmq-database:

networks:
    tg-support-bot-network:
        driver: bridge
